apply plugin: 'jacoco'

jacoco {
    toolVersion = Versions.jacoco
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

//task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
task everydayJacocoModulesTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    //we don't need this task to be displayed in the tasks group with the others, as we will only ever launch the child everydayJacocoGroupedReports task
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            // data binding
            'android/databinding/**/*.class',
            '**/android/databinding/*Binding.class',
            '**/android/databinding/*',
            '**/androidx/databinding/*',
            //
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*$[0-9].*',
            '**/di/**'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
    ])
}

// This task launches the tests and copies the reports to /reports/ directory
task everydayJacocoGroupedReports(type: Copy, dependsOn: 'everydayJacocoModulesTestReport') {
    group = 'Everyday'
    from "$buildDir/reports/"
    into "../reports/$project.name"
}