/*
 * Copyright (c) 2021. Shining-cat - Shiva Bernhard
 * This file is part of Everyday.
 *
 *     Everyday is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, version 3 of the License.
 *
 *     Everyday is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Everyday.  If not, see <https://www.gnu.org/licenses/>.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath AndroidLibraries.gradle
        classpath KotlinLibraries.kotlinGradlePlugin
        //gradle plugin to manage dependencies updates: see gradle tasks help > dependencyUpdates
        classpath Libraries.gradleVersionsPlugin
        classpath "org.jacoco:org.jacoco.core:${Versions.jacoco}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:${Versions.spotless}"
    }
}

apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.diffplug.spotless"

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

spotless {
    kotlin {
        // by default the target is every '.kt' and '.kts` file in the java sourcesets
        target '*.kt'
        ktfmt()    // has its own section below
        ktlint()   // has its own section below
        diktat()   // has its own section below
        prettier() // has its own section below
        licenseHeader '/* (C)$YEAR */' // or licenseHeaderFile
    }
    kotlinGradle {
        target '*.gradle.kts' // default target for kotlinGradle
        ktlint() // or ktfmt() or prettier()
    }
}

//
//task clean(type: Delete) {
//    delete rootProject.buildDir
//}