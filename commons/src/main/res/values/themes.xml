<?xml version="1.0" encoding="utf-8"?>

<resources xmlns:tools="http://schemas.android.com/tools">
    <!--Top level DayNight theme to be used in AndroidManifest.xml-->
    <style name="Theme.EveryDay" parent="Base.Theme.EveryDay" />
    <!--Base custom theme which will be shared between both light and dark theme variants-->
    <style name="Base.Theme.EveryDay" parent="Base.Theme.MaterialTheme">
        <!--Material color attributes (light theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/teal_300</item>
        <item name="colorPrimaryVariant">@color/teal_600</item>
        <item name="colorSecondary">@color/amber_500</item>
        <item name="colorSecondaryVariant">@color/amber_800</item>
        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an error state for components such as-->
        <!--text fields.-->
        <item name="android:colorBackground">@color/grey_50</item>
        <item name="colorSurface">@color/grey_100</item>
        <item name="colorError">@color/red_600</item>
        <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
        <!--on which they appear.-->
        <item name="colorOnPrimary">@color/grey_50</item>
        <item name="colorOnSecondary">@color/grey_900</item>
        <item name="colorOnBackground">@color/black</item>
        <item name="colorOnSurface">@color/grey_900</item>
        <item name="colorOnError">@color/white</item>
        <!--Material type attributes-->
        <item name="textAppearanceHeadline1">@style/TextAppearance.Everyday.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.Everyday.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.Everyday.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.Everyday.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.Everyday.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.Everyday.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.Everyday.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.Everyday.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.Everyday.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.Everyday.Body2</item>
        <item name="textAppearanceButton">@style/TextAppearance.Everyday.Button</item>
        <item name="textAppearanceCaption">@style/TextAppearance.Everyday.Caption</item>
        <item name="textAppearanceOverline">@style/TextAppearance.Everyday.Overline</item>
        <!--Material shape attributes-->
        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.Everyday.SmallComponent</item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.Everyday.MediumComponent</item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.Everyday.LargeComponent</item>
        <!--Component styles-->
        <item name="materialAlertDialogTheme">@style/ThemeOverlay.MaterialComponents.Dialog.Alert</item>
        <item name="bottomSheetDialogTheme">@style/ThemeOverlay.Everyday.BottomSheetDialog</item>
        <item name="navigationViewStyle">@style/Widget.Everyday.NavigationView</item>
        <item name="bottomNavigationStyle">@style/Widget.MaterialComponents.BottomNavigationView.Colored</item>
        <item name="toolbarStyle">@style/Widget.MaterialComponents.Toolbar.PrimarySurface</item>
    </style>

    <style name="Base.Theme.MaterialTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <item name="android:statusBarColor" tools:ignore="NewApi">?attr/colorPrimaryVariant</item>
        <item name="android:windowLightStatusBar" tools:ignore="NewApi">true</item>
        <item name="android:navigationBarColor" tools:ignore="NewApi">?attr/colorPrimaryVariant</item>
        <item name="android:windowLightNavigationBar" tools:ignore="NewApi">true</item>
        <item name="android:navigationBarDividerColor" tools:ignore="NewApi">
            ?attr/colorControlHighlight
        </item>
    </style>

    <style name="TimePickerWidgetStyle" parent="@android:style/Widget.Material.Light.TimePicker">
        <!--TODO? tried overwriting the default light version of the TimePicker because I don't like it using the Accent color as a header background color, but headerTextColor is private,
                so there does not seem to be a way to assort the header text color to the background... o_O -->
<!--    Pb: this is a private attribute : <item name="android:headerTextColor">?attr/colorOnSurface</item>-->
<!--        <item name="android:headerBackground">#BDBDBD</item>-->
<!--        <item name="android:numbersBackgroundColor">#BDBDBD</item>-->
<!--        <item name="android:numbersTextColor">#FF0000</item>-->
<!--        <item name="android:numbersInnerTextColor">#00FF00</item>-->
    </style>
</resources>